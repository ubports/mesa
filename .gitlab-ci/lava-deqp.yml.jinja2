job_name: mesa-deqp-{{ gpu_version }}
device_type: {{ device_type }}
timeouts:
  job:
    minutes: 40
  action:
   minutes: 10
  actions:
    power-off:
      seconds: 30
priority: 75
visibility: public
{% if tags %}
tags:
{% for tag in tags %}
  - {{ tag }}
{% endfor %}
{% endif %}
actions:
- deploy:
    timeout:
      minutes: 10
    to: tftp
    kernel:
      url: {{ base_artifacts_url }}/{{ kernel_image_name }}
{% if kernel_image_type %}
      {{ kernel_image_type }}
{% endif %}
    ramdisk:
      url: {{ base_artifacts_url }}/lava-rootfs-{{ arch }}.cpio.gz
      compression: gz
    dtb:
      url: {{ base_artifacts_url }}/{{ device_type }}.dtb
    os: oe
- boot:
    timeout:
      minutes: 5
    method: {{ boot_method }}
    commands: ramdisk
    prompts:
      - '#' 
- test:
    timeout:
      minutes: 60
    definitions:
    - repository:
        metadata:
          format: Lava-Test Test Definition 1.0
          name: deqp
          description: "Mesa dEQP test plan"
          os:
          - oe
          scope:
          - functional
        run:
          steps:
          - mount -t proc none /proc
          - mount -t sysfs none /sys 
          - mount -t devtmpfs none /dev
          - mkdir -p /dev/pts
          - mount -t devpts devpts /dev/pts

{% if env_vars %}
          - export {{ env_vars }}
{% endif %}

          - export DEQP_NO_SAVE_RESULTS=1
          - 'export DEQP_RUNNER_OPTIONS="--compact-display false --shuffle false"'
          - export DEQP_EXPECTED_FAILS=deqp-{{ gpu_version }}-fails.txt
          - export DEQP_SKIPS=deqp-{{ gpu_version }}-skips.txt
          - export DEQP_VER={{ deqp_version }}
          - export LIBGL_DRIVERS_PATH=`pwd`/install/lib/dri

          # Put stuff where the runner script expects it
          - mkdir artifacts
          - mkdir results
          - mkdir -p install/lib
          - cp /deqp/$DEQP_EXPECTED_FAILS artifacts/.
          - cp /deqp/$DEQP_SKIPS artifacts/.
          - mv /mesa/lib/* install/lib/.

          - "if sh /deqp/deqp-runner.sh; then
                  echo 'deqp: pass';
             else
                  echo 'deqp: fail';
             fi"
        parse:
          pattern: '(?P<test_case_id>\S*):\s+(?P<result>(pass|fail))'
      from: inline
      name: deqp
      path: inline/mesa-deqp.yaml
